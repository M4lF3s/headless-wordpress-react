version: "3.7"

services:
  
  proxy:
    build: ./services/proxy
    container_name: Homepage_SSLProxy
    ports:  # Syntax: 'HOST:CONTAINER'
      - '80:80'
      - '443:443'
    volumes:
      - ./volumes/ssl_certs:/var/lib/https-portal
    links:  # Syntax: service:hostname
      - wordpress
      - client
    restart: unless-stopped
    env_file:
      - ./env/https-portal.dev.env
    networks:
      example-network:
        ipv4_address: 172.23.2.10

  wordpress:
    build: ./services/wordpress
    container_name: Homepage_wordpress
    links:
      - database:db
    #ports:
    #  - 8080:80
    volumes:
      - ./services/wordpress/wptheme:/var/www/html/wp-content/themes/wptheme
    restart: unless-stopped
    env_file:
      - ./env/wordpress.env
    secrets:
      - db_password
    networks:
      example-network:
        ipv4_address: 172.23.2.20

  database:
    build: ./services/database
    container_name: Homepage_Database
    volumes:
      - ./volumes/database:/var/lib/mysql
      - ./services/database/init.sh:/docker-entrypoint-initdb.d/database_init.sh
    env_file:
      - ./env/database.env
    ports:
      - "3306:3306"
    secrets:
       - db_root_password
       - db_password
    networks:
      example-network:
        ipv4_address: 172.23.2.30

  adminer:
    image: adminer
    links:
      - database:db
    ports:
      - 8082:8080
    networks:
      example-network:
        ipv4_address: 172.23.2.40


  client:
    image: node:latest
    container_name: Homepage_client
    volumes:
      - ./services/client:/opt/client
    working_dir: /opt/client
    command: bash -c "yarn && yarn dev dev"
    links:
      - wordpress
    networks:
      example-network:
        ipv4_address: 172.23.2.50
    

secrets:
   db_password:
     file: ./secrets/db_password
   db_root_password:
     file: ./secrets/db_root_password

networks:
  example-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.23.2.0/24
